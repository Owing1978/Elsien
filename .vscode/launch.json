{
    // Use IntelliSense para saber los atributos posibles.
    // Mantenga el puntero para ver las descripciones de los existentes atributos.
    // Para más información, visite: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        
        {
            "name": "(gdb) Iniciar",
            "type": "cppdbg",
            "request": "launch",
            "program": "Escriba el nombre del programa; por ejemplo, ${workspaceFolder}/a.exe.",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "miDebuggerPath": "/path/to/gdb",
            "setupCommands": [
                {
                    "description": "Habilitar la impresión con sangría para gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Bash en Windows: iniciar",
            "type": "cppdbg",
            "request": "launch",
            "program": "Escriba el nombre del programa; por ejemplo, ${workspaceFolder}/a.exe.",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "${env:windir}\\system32\\bash.exe",
                "pipeArgs": ["-c"],
                "pipeCwd": ""
            },
            "setupCommands": [
                {
                    "description": "Habilitar la impresión con sangría para gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Bash en Windows: asociar",
            "type": "cppdbg",
            "request": "attach",
            "program": "Escriba el nombre del programa; por ejemplo, ${workspaceFolder}/a.exe.",
            "processId": "${command:pickRemoteProcess}",
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "${env:windir}\\system32\\bash.exe",
                "pipeArgs": ["-c"],
                "pipeCwd": ""
            },
            "setupCommands": [
                {
                    "description": "Habilitar la impresión con sangría para gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Asociación de canalización",
            "type": "cppdbg",
            "request": "attach",
            "program": "Escriba el nombre del programa; por ejemplo, ${workspaceFolder}/a.exe.",
            "processId": "${command:pickRemoteProcess}",
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "<Ruta de acceso completa al programa de canalización, como plink.exe.>",
                "pipeArgs": [],
                "pipeCwd": ""
            },
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Habilitar la impresión con sangría para gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Adjuntar",
            "type": "cppdbg",
            "request": "attach",
            "program": "Escriba el nombre del programa; por ejemplo, ${workspaceFolder}/a.exe.",
            "processId": "${command:pickProcess}",
            "MIMode": "gdb",
            "miDebuggerPath": "/path/to/gdb",
            "setupCommands": [
                {
                    "description": "Habilitar la impresión con sangría para gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "Remote Debug IoT Edge Module (.NET Core)",
            "type": "coreclr",
            "request": "attach",
            "processId": "${command:pickRemoteProcess}",
            "pipeTransport": {
                "pipeProgram": "docker",
                "pipeArgs": [
                    "exec",
                    "-i",
                    "<container_name>",
                    "sh",
                    "-c"
                ],
                "debuggerPath": "~/vsdbg/vsdbg",
                "pipeCwd": "${workspaceFolder}",
                "quoteArgs": true
            },
            "sourceFileMap": {
                "/app": "${workspaceFolder}"
            },
            "justMyCode": true
        },
        {
            "name": ".NET Core Launch (console)",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build",
            "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
            "args": [],
            "cwd": "${workspaceFolder}",
            "stopAtEntry": false,
            "console": "internalConsole",
            "pipeTransport": {
                "pipeCwd": "${workspaceFolder}",
                "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
                "pipeArgs": [],
                "debuggerPath": "enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"
            }
        },
        {
            "name": ".NET Core Launch (web)",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build",
            "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
            "args": [],
            "cwd": "${workspaceFolder}",
            "stopAtEntry": false,
            "serverReadyAction": {
                "action": "openExternally",
                "pattern": "\\bNow listening on:\\s+(https?://\\S+)"
            },
            "env": {
                "ASPNETCORE_ENVIRONMENT": "Development"
            },
            "sourceFileMap": {
                "/Views": "${workspaceFolder}/Views"
            }
        },
        {
            "name": "Launch IoT Edge Module (.NET Core)",
            "type": "coreclr",
            "request": "launch",
            "program": "${workspaceRoot}/bin/Debug/<target-framework>/<project-name.dll>",
            "args": [],
            "cwd": "${workspaceRoot}",
            "internalConsoleOptions": "openOnSessionStart",
            "stopAtEntry": false,
            "console": "internalConsole",
            "env": {
                "EdgeHubConnectionString": "${config:azure-iot-edge.EdgeHubConnectionString}",
                "EdgeModuleCACertificateFile": "${config:azure-iot-edge.EdgeModuleCACertificateFile}"
            }
        },
        {
            "name": "Launch IoT Edge Module (.NET Core)",
            "type": "coreclr",
            "request": "launch",
            "program": "${workspaceRoot}/bin/Debug/<target-framework>/<project-name.dll>",
            "args": [],
            "cwd": "${workspaceRoot}",
            "internalConsoleOptions": "openOnSessionStart",
            "stopAtEntry": false,
            "console": "internalConsole",
            "env": {
                "EdgeHubConnectionString": "${config:azure-iot-edge.EdgeHubConnectionString}",
                "EdgeModuleCACertificateFile": "${config:azure-iot-edge.EdgeModuleCACertificateFile}"
            }
        },
        {
            "name": ".NET Core Launch (console)",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build",
            "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
            "args": [],
            "cwd": "${workspaceFolder}",
            "stopAtEntry": false,
            "console": "internalConsole"
        },
        {
            "name": ".NET Core Attach",
            "type": "coreclr",
            "request": "attach",
            "pipeTransport": {
                "pipeCwd": "${workspaceFolder}",
                "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
                "pipeArgs": [],
                "debuggerPath": "enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"
            }
        },
        {
            "name": ".NET Core Attach",
            "type": "coreclr",
            "request": "attach"
        }

    ]
}